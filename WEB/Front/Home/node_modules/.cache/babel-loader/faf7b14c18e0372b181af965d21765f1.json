{"ast":null,"code":"var _jsxFileName = \"/Users/Jimin1/Desktop/Test/0415/CACA/WEB/Front/Home/src/update_contact_user.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState, useRef } from 'react';\nimport { BrowserRouter, Route, Link, Routes, useNavigate } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport Subject from './Subject.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction update_contact_user() {\n  _s();\n\n  const [user_id, setMessage_id] = useState(\"\");\n  const [user_pw, setMessage_pw] = useState(\"\");\n\n  const onChangeId = e => {\n    setMessage_id(e.target.value);\n  };\n\n  const onChangePw = e => {\n    setMessage_pw(e.target.value);\n  };\n\n  const navigate = useNavigate();\n\n  const handleClick = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:8085/login?user_id=\" + user_id + \"&user_pw=\" + user_pw, {\n      method: \"POST\",\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(\"백엔드에서 오는 응답 메세지 \", result);\n\n      if (result.toString() == \"true\") {\n        navigate(\"../\", {\n          replace: true\n        });\n      } else {\n        alert('로그인에 실패했습니다. 다시 시도해주세요.');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"user_email\",\n        placeholder: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(update_contact_user, \"DV8s2GyGpW6dYTwzezci7aRe1Q4=\", false, function () {\n  return [useNavigate];\n});\n\nexport default update_contact_user;","map":{"version":3,"sources":["/Users/Jimin1/Desktop/Test/0415/CACA/WEB/Front/Home/src/update_contact_user.js"],"names":["useEffect","useState","useRef","BrowserRouter","Route","Link","Routes","useNavigate","ReactDOM","Subject","update_contact_user","user_id","setMessage_id","user_pw","setMessage_pw","onChangeId","e","target","value","onChangePw","navigate","handleClick","preventDefault","fetch","method","headers","Headers","then","response","json","result","console","log","toString","replace","alert"],"mappings":";;;AAAA;AACA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,MAArC,EAA6CC,WAA7C,QAAgE,kBAAhE;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AAEA,SAASC,mBAAT,GAA+B;AAAA;;AAE3B,QAAM,CAACC,OAAD,EAAUC,aAAV,IAA2BX,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACY,OAAD,EAAUC,aAAV,IAA2Bb,QAAQ,CAAC,EAAD,CAAzC;;AAGA,QAAMc,UAAU,GAAIC,CAAD,IAAO;AACtBJ,IAAAA,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAGA,QAAMC,UAAU,GAAIH,CAAD,IAAO;AACtBF,IAAAA,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAIA,QAAME,QAAQ,GAAGb,WAAW,EAA5B;;AACA,QAAMc,WAAW,GAAIL,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACM,cAAF;AACAC,IAAAA,KAAK,CAAC,yCAAyCZ,OAAzC,GAAmD,WAAnD,GAAiEE,OAAlE,EAA2E;AAC5EW,MAAAA,MAAM,EAAE,MADoE;AAE5EC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,kBAAU,kBADO;AAEjB,wBAAgB;AAFC,OAAZ;AAFmE,KAA3E,CAAL,CAOKC,IAPL,CAOWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPxB,EAQKF,IARL,CAQWG,MAAD,IAAY;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,MAAhC;;AACA,UAAIA,MAAM,CAACG,QAAP,MAAqB,MAAzB,EAAiC;AAC7Bb,QAAAA,QAAQ,CAAC,KAAD,EAAQ;AAAEc,UAAAA,OAAO,EAAE;AAAX,SAAR,CAAR;AACH,OAFD,MAEO;AACHC,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACH;AAEJ,KAhBL;AAiBH,GAnBD;;AAqBA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,IAAI,EAAC,YAAjD;AAA8D,QAAA,WAAW,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA1CQzB,mB;UAaYH,W;;;AA+BrB,eAAeG,mBAAf","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState, useRef } from 'react';\nimport { BrowserRouter, Route, Link, Routes, useNavigate } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport Subject from './Subject.jsx';\n\nfunction update_contact_user() {\n\n    const [user_id, setMessage_id] = useState(\"\");\n    const [user_pw, setMessage_pw] = useState(\"\");\n\n\n    const onChangeId = (e) => {\n        setMessage_id(e.target.value);\n    };\n    const onChangePw = (e) => {\n        setMessage_pw(e.target.value);\n    };\n\n    const navigate = useNavigate();\n    const handleClick = (e) => {\n        e.preventDefault()\n        fetch(\"http://localhost:8085/login?user_id=\" + user_id + \"&user_pw=\" + user_pw, {\n            method: \"POST\",\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }),\n        })\n            .then((response) => response.json())\n            .then((result) => {\n                console.log(\"백엔드에서 오는 응답 메세지 \", result);\n                if (result.toString() == \"true\") {\n                    navigate(\"../\", { replace: true });\n                } else {\n                    alert('로그인에 실패했습니다. 다시 시도해주세요.');\n                }\n\n            });\n    }\n\n    return (\n        <div>\n            <div className=\"form-group\">\n            <input type=\"text\" className=\"form-control\" name=\"user_email\" placeholder=\"Your Email\" />\n            </div>\n        </div>\n    );\n}\n\nexport default update_contact_user;"]},"metadata":{},"sourceType":"module"}